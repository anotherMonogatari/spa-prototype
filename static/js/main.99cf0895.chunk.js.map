{"version":3,"sources":["redux/reducer.js","components/Markets.js","App.js","index.js"],"names":["initialState","data","img","shortName","name","money","percent","amount","Markets","Jumbotron","fluid","className","Container","Row","Col","md","xl","connect","state","dataToProp","sortAction","payload","type","useEffect","useState","isOpen","setIsOpen","Navbar","color","dark","expand","NavbarBrand","tag","RouterNavLink","to","NavbarToggler","onClick","Collapse","navbar","Nav","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","NavItem","NavLink","target","href","path","exact","UncontrolledButtonDropdown","size","outline","Table","responsive","striped","bordered","map","item","key","store","createStore","sort","a","b","toUpperCase","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.99cf0895.chunk.js","sourcesContent":["// Actions stuff\r\nconst SORT = \"SORT\"\r\n\r\nexport const sortAction = (payload) => {\r\n    return {\r\n    type: SORT,\r\n    payload: payload\r\n}}\r\n\r\n// State\r\nconst initialState = {\r\n    data: [\r\n        {\r\n            img: '',\r\n            shortName: 'BTC',\r\n            name: 'Bitcoin',\r\n            money: 15.23,\r\n            percent: 0.07,\r\n            amount: 234450\r\n        },\r\n        {\r\n            img: '',\r\n            shortName: 'BNB',\r\n            name: 'BNB',\r\n            money: 7.23,\r\n            percent: -0.2,\r\n            amount: 2450\r\n        },\r\n        {\r\n            img: '',\r\n            shortName: 'ETH',\r\n            name: 'Ethereum',\r\n            money: 2.23,\r\n            percent: 0.6,\r\n            amount: 104450\r\n        },\r\n        {\r\n            img: '',\r\n            shortName: 'XRP',\r\n            name: 'Ripple',\r\n            money: 5.23,\r\n            percent: 0.46,\r\n            amount: 352346\r\n        },\r\n        {\r\n            img: '',\r\n            shortName: 'LTC',\r\n            name: 'Litecoin',\r\n            money: 21.23,\r\n            percent: -0.06,\r\n            amount: 88450\r\n        }\r\n    ]\r\n}\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n    switch (type) {\r\n\r\n    case SORT:\r\n        switch (payload) {\r\n            case \"a-z\":                              \r\n                return {\r\n                    ...state,\r\n                    data: [...state.data.sort((a,b) => {\r\n                        if ( a.name.toUpperCase() < b.name.toUpperCase() ){\r\n                            return -1;\r\n                          }\r\n                          if ( a.name.toUpperCase() > b.name.toUpperCase() ){\r\n                            return 1;\r\n                          }\r\n                          return 0;\r\n                    })]                    \r\n                }\r\n\r\n            case \"z-a\":\r\n                return {\r\n                    ...state,\r\n                    data: [...state.data.sort((a,b) => {\r\n                        if ( a.name.toUpperCase() > b.name.toUpperCase() ){\r\n                            return -1;\r\n                          }\r\n                          if ( a.name.toUpperCase() < b.name.toUpperCase() ){\r\n                            return 1;\r\n                          }\r\n                          return 0;\r\n                     })]\r\n                }\r\n            case \"1-9$\":\r\n                return {\r\n                    ...state,\r\n                    data: [...state.data.sort((a,b) => {\r\n                        if ( a.money < b.money ){\r\n                            return -1;\r\n                          }\r\n                          if ( a.money > b.money ){\r\n                            return 1;\r\n                          }\r\n                          return 0;\r\n                     })]\r\n                }\r\n            case \"9-1$\":\r\n                return {\r\n                    ...state,\r\n                    data: [...state.data.sort((a,b) => {\r\n                        if ( a.money > b.money ){\r\n                            return -1;\r\n                          }\r\n                          if ( a.money < b.money ){\r\n                            return 1;\r\n                          }\r\n                          return 0;\r\n                     })]\r\n                }\r\n            case \"1-9%\":\r\n                return {\r\n                    ...state,\r\n                    data: [...state.data.sort((a,b) => {\r\n                        if ( a.percent < b.percent ){\r\n                            return -1;\r\n                          }\r\n                          if ( a.percent > b.percent ){\r\n                            return 1;\r\n                          }\r\n                          return 0;\r\n                     })]\r\n                }\r\n            case \"9-1%\":\r\n                return {\r\n                    ...state,\r\n                    data: [...state.data.sort((a,b) => {\r\n                        if ( a.percent > b.percent ){\r\n                            return -1;\r\n                          }\r\n                          if ( a.percent < b.percent ){\r\n                            return 1;\r\n                          }\r\n                          return 0;\r\n                     })]\r\n                }\r\n            \r\n            default: \r\n                return state\r\n        }\r\n        \r\n\r\n    default:\r\n        return state\r\n    }\r\n}\r\n\r\n","import React from 'react'\r\n// import { useParams } from 'react-router-dom'\r\nimport { Jumbotron, Container, Row, Col } from 'reactstrap';\r\n\r\nconst Markets = () => {\r\n    // const {type} = useParams()\r\n    return (\r\n      <>\r\n        <Jumbotron fluid className='mb-2'>\r\n            <Container>\r\n            <h1 className=\"display-3 text-center\">Markets</h1>\r\n            </Container>\r\n        </Jumbotron>\r\n        <Container>\r\n            <Row className='mb-5'>\r\n                <Col md='6' xl='4'><h2 className='display-4 py-5 mt-4 bg-light text-center'>dumb text</h2></Col>\r\n                <Col md='6' xl='4'><h2 className='display-4 py-5 mt-4 bg-light text-center'>dumb text</h2></Col>\r\n                <Col md='6' xl='4'><h2 className='display-4 py-5 mt-4 bg-light text-center'>dumb text</h2></Col>\r\n                <Col md='6' xl='4'><h2 className='display-4 py-5 mt-4 bg-light text-center'>dumb text</h2></Col>\r\n                <Col md='6' xl='4'><h2 className='display-4 py-5 mt-4 bg-light text-center'>dumb text</h2></Col>\r\n                <Col md='6' xl='4'><h2 className='display-4 py-5 mt-4 bg-light text-center'>dumb text</h2></Col>\r\n                <Col md='6' xl='4'><h2 className='display-4 py-5 mt-4 bg-light text-center'>dumb text</h2></Col>\r\n                <Col md='6' xl='4'><h2 className='display-4 py-5 mt-4 bg-light text-center'>dumb text</h2></Col>\r\n                <Col md='6' xl='4'><h2 className='display-4 py-5 mt-4 bg-light text-center'>dumb text</h2></Col>\r\n                <Col md='6' xl='4'><h2 className='display-4 py-5 mt-4 bg-light text-center'>dumb text</h2></Col>\r\n                <Col md='6' xl='4'><h2 className='display-4 py-5 mt-4 bg-light text-center'>dumb text</h2></Col>\r\n                <Col md='6' xl='4'><h2 className='display-4 py-5 mt-4 bg-light text-center'>dumb text</h2></Col>\r\n            </Row>\r\n        </Container>\r\n      </>\r\n    )\r\n}\r\n\r\nexport default Markets\r\n","import React, {useState, useEffect} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {sortAction} from './redux/reducer'\r\nimport {NavLink as RouterNavLink, Route, Switch} from 'react-router-dom'\r\nimport {\r\n  Container,\r\n  Table,\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  UncontrolledButtonDropdown,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem\r\n} from 'reactstrap';\r\n\r\nimport Markets from './components/Markets'\r\n\r\nconst App = ({dataToProp,sortAction}) => {\r\n  useEffect(\r\n    () => {\r\n      sortAction(\"9-1%\")\r\n    }, []\r\n  )\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  \r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  return (\r\n    <>\r\n      <Navbar color=\"dark\" dark expand=\"md\">\r\n        <Container>\r\n        <NavbarBrand tag={RouterNavLink} to=\"/spa-prototype\">Blockchain Network</NavbarBrand>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"mr-auto\" navbar>\r\n            <UncontrolledDropdown nav inNavbar>\r\n              <DropdownToggle nav caret>\r\n                Markets\r\n              </DropdownToggle>\r\n              <DropdownMenu right>\r\n                <DropdownItem tag={RouterNavLink} to=\"/spa-prototype/markets/games\">\r\n                  Games\r\n                </DropdownItem>\r\n                <DropdownItem tag={RouterNavLink} to=\"/spa-prototype/markets/bp\">\r\n                  BP\r\n                </DropdownItem>            \r\n                <DropdownItem tag={RouterNavLink} to=\"/spa-prototype/markets/metal\">\r\n                  Metal\r\n                </DropdownItem>            \r\n                <DropdownItem tag={RouterNavLink} to=\"/spa-prototype/markets/smart_contacts\">\r\n                  Smart Contacts\r\n                </DropdownItem>            \r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n            <NavItem>\r\n              <NavLink target=\"_blank\" href=\"https://www.google.com\">Crypto News</NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n          <Nav className=\"ml-auto\" navbar>            \r\n            <NavItem>\r\n              <NavLink tag={RouterNavLink} to=\"/spa-prototype/wallet\">Wallet</NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n        </Collapse>\r\n        </Container>\r\n      </Navbar>\r\n\r\n\r\n      <Switch>\r\n        \r\n        <Route path=\"/spa-prototype\" exact>\r\n        <Container>\r\n    <UncontrolledButtonDropdown className=\"mr-2 mr-sm-4 mt-5\">\r\n      <DropdownToggle size=\"sm\" outline caret>\r\n        By name\r\n      </DropdownToggle>\r\n      <DropdownMenu>\r\n        <DropdownItem onClick={() => sortAction(\"a-z\")}>a-z</DropdownItem>\r\n        <DropdownItem onClick={() => sortAction(\"z-a\")}>z-a</DropdownItem>\r\n      </DropdownMenu>\r\n    </UncontrolledButtonDropdown>\r\n    <UncontrolledButtonDropdown className=\"mr-2 mr-sm-4 mt-5\">\r\n      <DropdownToggle size=\"sm\" outline caret>\r\n        By price\r\n      </DropdownToggle>\r\n      <DropdownMenu>\r\n        <DropdownItem onClick={() => sortAction(\"1-9$\")}>1-9</DropdownItem>\r\n        <DropdownItem onClick={() => sortAction(\"9-1$\")}>9-1</DropdownItem>\r\n      </DropdownMenu>\r\n    </UncontrolledButtonDropdown>\r\n    <UncontrolledButtonDropdown className=\"mr-2 mr-sm-4 mt-5\">\r\n      <DropdownToggle size=\"sm\" outline caret>\r\n        By percents\r\n      </DropdownToggle>\r\n      <DropdownMenu>\r\n        <DropdownItem onClick={() => sortAction(\"1-9%\")}>1-9</DropdownItem>\r\n        <DropdownItem onClick={() => sortAction(\"9-1%\")}>9-1</DropdownItem>\r\n      </DropdownMenu>\r\n    </UncontrolledButtonDropdown>\r\n    \r\n          <Table responsive striped bordered className=\"mt-4\">\r\n            <tbody>\r\n              {dataToProp.map(item => <tr key={item.shortName}>                                    \r\n                                        <td>{item.shortName}</td>\r\n                                        <td>{item.name}</td>\r\n                                        <td>{item.money}$</td>\r\n                                        <td>{item.percent}%</td>\r\n                                        <td>{item.amount}$</td>\r\n                                      </tr>)}\r\n            </tbody>\r\n          </Table></Container>\r\n        </Route>\r\n \r\n        \r\n        <Route path=\"/spa-prototype/wallet\" exact>\r\n          \r\n        </Route>\r\n\r\n        <Route path=\"/spa-prototype/markets/:type\">\r\n          <Markets />\r\n        </Route>\r\n\r\n        <Route>\r\n          \r\n        </Route>\r\n      </Switch>     \r\n    </>\r\n  )\r\n}\r\n\r\nexport default connect((state) => {\r\n  return {dataToProp: state.data}\r\n}, {sortAction})(App)\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport {BrowserRouter} from 'react-router-dom'\nimport {createStore} from 'redux'\nimport {Provider} from 'react-redux'\nimport reducer from './redux/reducer'\n\nconst store = createStore(reducer)\n\nReactDOM.render( <Provider store={store}>\n                    <BrowserRouter>                        \n                            <App />\n                    </BrowserRouter>\n                </Provider> , document.getElementById('root'));\n                "],"sourceRoot":""}